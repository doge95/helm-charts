# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "master" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Push Frontend Chart to GAR

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
    paths:
      - 'topwaypoints-frontend/**/*'
  pull_request:
    branches:
      - 'master'

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: us-east4 # TODO: update region of the Artifact Registry
  GKE_CLUSTER: autopilot-cluster-2    # TODO: update to cluster name
  GKE_ZONE: us-east4  # TODO: update to cluster zone
  DEPLOYMENT_NAME: topwaypoints-frontend # TODO: update to deployment name
  REPOSITORY: helm-charts # TODO: update to Artifact Registry docker repository

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, and Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0.4.3
      with:
        project_id: $PROJECT_ID
        credentials_json: '${{ secrets.GCP_JSON }}'

    - name: Configure GCloud Auth provider with Docker
      run: |
            gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev

    # Install helm
    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    # Package and Push the Helm chart to Google Container Registry
    - name: Package and Publish
      run: |
        helm package topwaypoints-frontend/
        helm push *.tgz oci://$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY
    
    # Deploy the Helm chart in GKE
    - name: Deploy to GKE
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID
        helm upgrade $DEPLOYMENT_NAME oci://$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$DEPLOYMENT_NAME --wait --install
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide